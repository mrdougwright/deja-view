api
---

#create

var myview = view.create()

#find

<div view='user'> #name </div>

var userView = view.find('user')

#merge

var donationView = currencyView.merge(dateView)

#render

myview.render(node)

#config

myview.config({delimiter => "!#"})

#set

<div view='myview'> #val </div>

myview.set({val: 0})

<div view='myview'> 0 </div>

#get

myview.get('val')
// => 0

#push

myview.set({xs: [1,2,3]})
myview.push('xs', 4)
myview.get('xs')
// => [1,2,3,4]

#pop

myview.pop('xs')
myview.get('xs')
// => [1,2,3]

#find

myview.find('xs', 1)
// => 1

myview.find('xs', 99)
// => null

myview.set('objs', [{x: 1, y: 0}, {x: 2, y: 1}])
myview.find('objs', {x: 2})
// => {x: 2, y: 1}

myview.set('objs', [{x: 1, y: 0}, {x: 2, y: 1}])
myview.find('objs', {y: 2})
// => null

#findSet

myview.findSet('objs', {x: 1}, {x: 420, y: 420})
myview.get('objs')
// => [{x: 420, y: 420}, {x: 2, y: 1}]

myview.findSet('objs', {x: 999}, 'hi')
myview.get('objs')
// => [{x: 420, y: 420}, {x: 2, y: 1}]
// unchanged when cannot find

#last

myview.set('xs', [1,2,3])
myview.last('xs')
// => 3

#first

myview.first('xs')
// => 1

#onChange

myview.onChange('hi', function() {
	this.set('hiWasChanged', true)
})

myview.get('hiWasChanged')
// => null

myview.set('hi', 'hi')
myview.get('hiWasChanged')
// => true

myview.onChange('hi', 'bye', function() {
	this.set('what', true)
})

myview.get('what')
// => null

myview.set('hi', 'bye')
myview.get('what')
// => true

# onPush

myview.onPush('xs', function() {
	this.pop('xs')
})

// length 3 stack thing
myview.set('xs', [1,2,3])
myview.push('xs', 4)
myview.push('xs', 5)
myview.push('xs', 6)
myview.get('xs')
// => [4,5,6]

#config
	cache
	delimiter

myview.config({cache: true})
// all data in myview is auto-saved to localStorage

myview.config({delimiter: "!#"})
// instead of interpolating with #hi we now interpolate with !#hi

view functions
---

#if

#if(predicate, then_value, optional_else_value)

#if(anonymous, "Your profile is anonymous")

#if(niceGuy, "Hey yr cool", "Get outta here ya meanie")

#ifPrint

#ifPrint(anonymous)
anonymous is true -> 'anonymous'

#or

#or(name, email)

#set

#set(currentPage, 'completedTasks')

#len

#len(allTasks)

#str

#str('hello there', name, ' and welcome to ', pageName)

attr bindings
---

'each'

<tr each='pokemon'><td>#name</td></tr>

<tr each='pokemonNames'><td>#this</td>tr>

'if'

<p if='public'>#profileName</p>

'unless'

<p unless='public'>#profileName</p>

'on-{event}'

<p on-click="alert('what')"></p>

view.set('alert', function(msg) {
	alert(msg)
})

'val-set'

<input type='text' val-set='name' placeholder='Enter your name'>
<p>Hello, #name</p>

'submit-set'

'submit-push'

'submit-pop'

'inner-set'

<p contenteditable inner-set='name'>enter your name</p>
<p>Hello, #name</p>

'set-attr'

<p set-attr='data-what'></p>
->
<p data-what></p>

<p set-attr="if(currentAdmin, 'contenteditable')" inner-set='status'> #status </p>

<form submit-push='statuses'>
	<input type='text' name='content'>
</form>

<div each='statuses'>
	<p>#content</p>
</div>
